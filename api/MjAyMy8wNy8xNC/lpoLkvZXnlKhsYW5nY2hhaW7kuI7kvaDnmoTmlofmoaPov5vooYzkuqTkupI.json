{"title":"如何用langchain与你的文档进行交互","date":"2023-07-14T10:31:16.000Z","date_formatted":{"ll":"Jul 14, 2023","L":"07/14/2023","MM-DD":"07-14"},"link":"2023/07/14/如何用langchain与你的文档进行交互","tags":["AI","ChatGPT","Chroma","LangChain","Python","gpt4all"],"updated":"2023-07-14T09:02:41.322Z","content":"<h2 id=\"背景\">背景<a title=\"#背景\" href=\"#背景\"></a></h2>\n<p>在当前信息爆炸的时代，人们对于获取准确、实时的问题解答有着越来越高的需求。而基于<code>LLM</code>问答（QA）应用是满足这一需求的重要工具之一。</p>\n<p>看完本篇，将学习到：</p>\n<ol>\n<li>开发一个基于<code>LLM</code>问答应用的原理</li>\n<li>如何使用<code>langchain</code>开发一个基于<code>LLM</code>的问答应用</li>\n</ol>\n<p>个人开发一个本地知识库项目，一个可以和你的数据进行交互的项目<a href=\"https://github.com/Donglong/langchain-local-wiki\" target=\"_blank\">local-wiki</a></p>\n<h2 id=\"原理\">原理<a title=\"#原理\" href=\"#原理\"></a></h2>\n<p>将LLM与自定义数据结合问答(检索增强生成范式)通常包括两个阶段：</p>\n<ol>\n<li>知识集构建，创建索引阶段，亦是嵌入(Embeddings)阶段</li>\n<li>查询阶段</li>\n</ol>\n<h3 id=\"知识集构建阶段\">知识集构建阶段<a title=\"#知识集构建阶段\" href=\"#知识集构建阶段\"></a></h3>\n<p><code>langchain</code>通过<code>文档加载器(Loader)</code>、<code>分块器(Splitter)</code>和<code>嵌入(Embeddings)</code>来构建知识集</p>\n<p><img src=\"image/1689270477.png?\" alt=\"知识集构建过程\" loading=\"lazy\" class=\"φbp\"></p>\n<p>加载器(Loader): 将数据源的数据加载成<code>Document</code>, <code>Document</code>包括一些文本以及元信息， <code>langchain</code>内置了很多加载器，比如加载<code>.txt</code>文件，加载网页，加载youtube的视频文稿等<br>\n分块器(Splitter): 将大文本切片成更小，或者更有意义的文本块<br>\n嵌入(Embeddings): 使用特定模型获取文本的向量特征</p>\n<h3 id=\"查询阶段\">查询阶段<a title=\"#查询阶段\" href=\"#查询阶段\"></a></h3>\n<p><img src=\"image/1689300105.png?\" alt=\"查询阶段\" loading=\"lazy\" class=\"φbp\"></p>\n<p>检索器(Retriever): 根据非结构化查询获取文档<br>\n提示(Prompt): 模型的输入——模板、示例，用户输入的组合<br>\n大语言模型(LLM): 从大量数据中学习的自然语言文本AI模型， 可以生成关于任何主题或领域的文本</p>\n<h3 id=\"结合两个阶段\">结合两个阶段<a title=\"#结合两个阶段\" href=\"#结合两个阶段\"></a></h3>\n<p>整个过程包括加载文件 -&gt; 读取文本 -&gt; 文本分割 -&gt; 文本向量化 -&gt; 问句向量化 -&gt; 在文本向量中匹配出与问句向量最相似的<code>top k</code>个 -&gt; 匹配出的文本作为上下文和问题一起添加到<code>prompt</code>中 -&gt; 提交给<code>LLM</code>生成回答。</p>\n<p><img src=\"image/1689302232.png\" alt=\"Alt text\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"手把手教学\">手把手教学<a title=\"#手把手教学\" href=\"#手把手教学\"></a></h2>\n<h3 id=\"设置开发环境\">设置开发环境<a title=\"#设置开发环境\" href=\"#设置开发环境\"></a></h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> mkdir hello-langchain-wiki &amp;&amp; <span class=\"built_in\">cd</span> hello-langchain-wiki</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> python3 -mvenv .venv</span></span><br><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> <span class=\"built_in\">source</span> .venv/bin/activate</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"安装所需依赖\">安装所需依赖<a title=\"#安装所需依赖\" href=\"#安装所需依赖\"></a></h3>\n<p>操作系统: <code>MacOS</code><br>\nPython: <code>3.10.6</code><br>\nlangchain: <code>0.0.207</code><br>\nsentence_transformers: <code>2.2.2</code><br>\ngpt4all: <code>0.3.6</code><br>\nchromadb: <code>0.3.29</code><br>\ntiktoken: <code>0.4.0</code></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&gt;</span><span class=\"bash\"> pip install langchain gpt4all sentence_transformer chromadb tiktoken</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"构造embeddings\">构造embeddings<a title=\"#构造embeddings\" href=\"#构造embeddings\"></a></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.embeddings.sentence_transformer <span class=\"keyword\">import</span> SentenceTransformerEmbeddings</span><br><span class=\"line\"></span><br><span class=\"line\">embeddings_model_name = <span class=\"string\">&quot;shibing624/text2vec-base-chinese&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">embeddings = SentenceTransformerEmbeddings(</span><br><span class=\"line\">    model_name=embeddings_model_name</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"构造向量数据库\">构造向量数据库<a title=\"#构造向量数据库\" href=\"#构造向量数据库\"></a></h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.vectorstores.chroma <span class=\"keyword\">import</span> Chroma</span><br><span class=\"line\"></span><br><span class=\"line\">vector_store_dir = <span class=\"string\">&quot;./vs&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">vector_store = Chroma(</span><br><span class=\"line\">    embedding_function=embeddings,</span><br><span class=\"line\">    persist_directory=vector_store_dir,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h3 id=\"知识集构建，索引创建阶段\">知识集构建，索引创建阶段<a title=\"#知识集构建，索引创建阶段\" href=\"#知识集构建，索引创建阶段\"></a></h3>\n<h4 id=\"加载文档\">加载文档<a title=\"#加载文档\" href=\"#加载文档\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pathlib <span class=\"keyword\">import</span> Path</span><br><span class=\"line\"><span class=\"keyword\">from</span> typing <span class=\"keyword\">import</span> <span class=\"type\">Dict</span>, <span class=\"type\">Optional</span>, <span class=\"type\">Type</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> langchain.document_loaders.base <span class=\"keyword\">import</span> BaseLoader</span><br><span class=\"line\"><span class=\"keyword\">from</span> langchain.document_loaders.text <span class=\"keyword\">import</span> TextLoader</span><br><span class=\"line\"></span><br><span class=\"line\">doc_path = <span class=\"string\">&quot;./docs/test.txt&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">loader = TextLoader(doc_path)</span><br><span class=\"line\"></span><br><span class=\"line\">documents = loader.load()</span><br></pre></td></tr></table></figure>\n<h4 id=\"对文档进行切块\">对文档进行切块<a title=\"#对文档进行切块\" href=\"#对文档进行切块\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.text_splitter <span class=\"keyword\">import</span> RecursiveCharacterTextSplitters</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 文本块大小</span></span><br><span class=\"line\">CHUNK_SIZE = <span class=\"number\">500</span></span><br><span class=\"line\"><span class=\"comment\"># 两个文本块重叠大小</span></span><br><span class=\"line\">CHUNK_OVERLAP = <span class=\"number\">0</span></span><br><span class=\"line\"></span><br><span class=\"line\">text_splitter = RecursiveCharacterTextSplitter.from_tiktoken_encoder(</span><br><span class=\"line\">    chunk_size=CHUNK_SIZE,</span><br><span class=\"line\">    chunk_overlap=CHUNK_OVERLAP,</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">documents = text_splitter.split_documents(documents)</span><br></pre></td></tr></table></figure>\n<h4 id=\"存储至向量数据库\">存储至向量数据库<a title=\"#存储至向量数据库\" href=\"#存储至向量数据库\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">vector_store.add_documents(documents)</span><br></pre></td></tr></table></figure>\n<h3 id=\"查询阶段-1\">查询阶段<a title=\"#查询阶段-1\" href=\"#查询阶段-1\"></a></h3>\n<h4 id=\"加载llm模型\">加载LLM模型<a title=\"#加载llm模型\" href=\"#加载llm模型\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> langchain.llms <span class=\"keyword\">import</span> GPT4All</span><br><span class=\"line\"></span><br><span class=\"line\">local_model_path = <span class=\"string\">&quot;./models/ggml-gpt4all-j.bin&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">llm = GPT4All(model=local_model_path, verbose=<span class=\"literal\">True</span>)</span><br></pre></td></tr></table></figure>\n<h4 id=\"构建qa\">构建QA<a title=\"#构建qa\" href=\"#构建qa\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> langchain.chains <span class=\"keyword\">import</span> RetrievalQA</span><br><span class=\"line\"></span><br><span class=\"line\">qa = RetrievalQA.from_chain_type(</span><br><span class=\"line\">    llm,</span><br><span class=\"line\">    retriever=vector_store.as_retriever(),</span><br><span class=\"line\">    chain_type_kwargs=&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;prompt&quot;</span>: PROMPT,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<h4 id=\"与你的数据交互\">与你的数据交互<a title=\"#与你的数据交互\" href=\"#与你的数据交互\"></a></h4>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">answer = qa.run(<span class=\"string\">&quot;xxxx&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h2 id=\"参考\">参考<a title=\"#参考\" href=\"#参考\"></a></h2>\n<ol>\n<li><a href=\"https://python.langchain.com/docs/get_started/introduction.html\" target=\"_blank\">langchain</a></li>\n<li><a href=\"https://github.com/imClumsyPanda/langchain-ChatGLM\" target=\"_blank\">langchain-chatglm</a></li>\n</ol>\n","next":{"title":"我是如何搭建博客","link":"2022/04/09/我是如何搭建博客"},"plink":"http://donglong.github.com/2023/07/14/如何用langchain与你的文档进行交互/","toc":[{"id":"背景","title":"背景","index":"1"},{"id":"原理","title":"原理","index":"2","children":[{"id":"知识集构建阶段","title":"知识集构建阶段","index":"2.1"},{"id":"查询阶段","title":"查询阶段","index":"2.2"},{"id":"结合两个阶段","title":"结合两个阶段","index":"2.3"}]},{"id":"手把手教学","title":"手把手教学","index":"3","children":[{"id":"设置开发环境","title":"设置开发环境","index":"3.1"},{"id":"安装所需依赖","title":"安装所需依赖","index":"3.2"},{"id":"构造embeddings","title":"构造embeddings","index":"3.3"},{"id":"构造向量数据库","title":"构造向量数据库","index":"3.4"},{"id":"知识集构建，索引创建阶段","title":"知识集构建，索引创建阶段","index":"3.5"},{"id":"查询阶段-1","title":"查询阶段","index":"3.6"}]},{"id":"参考","title":"参考","index":"4"}],"reward":true,"reading_time":"826 words in 6 min"}